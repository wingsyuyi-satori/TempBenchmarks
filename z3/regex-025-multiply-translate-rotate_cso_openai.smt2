(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const x String)
(declare-const y String)
(assert (str.in_re x (re.* (re.++ (re.* (str.to_re "$$")) (str.to_re "}}")))))
(assert (str.in_re y (re.* (re.++ (re.* (str.to_re "$$")) (str.to_re "}}")))))
(assert (= (str.len x) (str.len y)))
(assert (not (= x y)))
(assert (= (str.len x) 14))

; --- LLM Generated Split Constraints ---
; Split x by "$$" into segments_x, y by "}}" into segments_y
(declare-const n_x Int)
(declare-const n_y Int)
(assert (= n_x (str.num_splits x "$$")))
(assert (= n_y (str.num_splits y "}}")))
(assert (>= n_x 1))
(assert (>= n_y 1))
; Split x at first "$$"
(declare-const x_prefix String)
(declare-const x_rest String)
(assert (= x_prefix (str.split_at x "$$" 0)))
(assert (= x_rest (str.split_rest x "$$" 1)))
; Nested split: split x_rest by "}}"
(declare-const x_nested String)
(assert (= x_nested (str.split_at x_rest "}}" 0)))
; Split y at first "}}"
(declare-const y_prefix String)
(declare-const y_rest String)
(assert (= y_prefix (str.split_at y "}}" 0)))
(assert (= y_rest (str.split_rest y "}}" 1)))
; Cross dependency: enforce relationship between x_prefix and y_rest
(assert (not (= x_prefix y_rest)))
; Advanced validation: Length and content relationships
(assert (<= (str.len x_prefix) (str.len y_prefix)))
(assert (> (str.len x_nested) 0))
(assert (not (str.contains y_prefix "$$")))
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
