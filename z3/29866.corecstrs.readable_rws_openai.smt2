(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: Email validation scenario (variant)
Target solver: Z3, CVC4, Z3str3, Z3-Noodler
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Variant: Email validation with stricter domain and local-part rules

(declare-const addr String)

; There must be exactly one "@" in the email address
(assert (= (str.num_splits addr "@") 2))

; Split into user and host
(declare-const user String)
(declare-const host String)
(assert (= user (str.split_at addr "@" 0)))
(assert (= host (str.split_at addr "@" 1)))

; Both user and host must be at least 2 characters long
(assert (>= (str.len user) 2))
(assert (>= (str.len host) 2))

; The host part must contain exactly one "."
(assert (= (str.num_splits host ".") 2))

; ; Extract subdomain and domain
(declare-const subdomain String)
(declare-const domain String)
(assert (= subdomain (str.split_at host "." 0)))
(assert (= domain (str.split_at host "." 1)))

; Subdomain must not be "mail"
(assert (not (= subdomain "mail")))

; Domain (TLD) must be at least 2 characters and only lowercase letters
(assert (>= (str.len domain) 2))
(assert (forall ((i Int))
 (=> (and (>= i 0) (< i (str.len domain)))
 (and (>= (str.to_code (str.at domain i)) (str.to_code "a"))
 (<= (str.to_code (str.at domain i)) (str.to_code "z"))))))

; ; Unsatisfiable constraint: user must be "admin", but subdomain must be "admin" too (contradicts earlier)
(assert (= user "admin"))
(assert (= subdomain "admin"))

(check-sat)
(get-model)
