(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const x String)
(declare-const y String)
(declare-const part_0_4714 String)
(declare-const rest_0_3552 String)
(declare-const rest_1_7787 String)
(assert (str.in_re x (re.* (re.++ (re.* (str.to_re "$$")) (str.to_re "}}")))))
(assert (str.in_re y (re.* (re.++ (re.* (str.to_re "$$")) (str.to_re "}}")))))
(assert (= (str.len x) (str.len y)))
(assert (not (= x y)))
(assert (= (str.len x) 14))
(assert (= (str.split_at y " " 3) part_0_4714))
(assert (str.suffixof "xy" part_0_4714))
(assert (= (str.split_rest y " " 2) rest_0_3552))
(assert (= (str.split_rest y ";" 1) "n4i1j"))
(assert (= (str.split_rest y ";" 2) rest_1_7787))
(assert (= (str.split_rest y ";" 0) "l5csupuvks1met6"))
(check-sat)

(get-model)
