;; universe for var495:
  ;;   var495!val!0 var495!val!1 
  ;; -----------
  ;; definitions for universe elements:
  (declare-fun var495!val!0 () var495)
  (declare-fun var495!val!1 () var495)
  ;; cardinality constraint:
  (forall ((x var495)) (or (= x var495!val!0) (= x var495!val!1)))
  ;; -----------
  ;; universe for var3493:
  ;;   var3493!val!0 var3493!val!1 
  ;; -----------
  ;; definitions for universe elements:
  (declare-fun var3493!val!0 () var3493)
  (declare-fun var3493!val!1 () var3493)
  ;; cardinality constraint:
  (forall ((x var3493)) (or (= x var3493!val!0) (= x var3493!val!1)))
  ;; -----------
  (define-fun null-var3493 () var3493
    var3493!val!1)
  (define-fun var1466 () String
    "!")
  (define-fun null-var495 () var495
    var495!val!1)
  (define-fun var1256 () var495
    var495!val!0)
  (define-fun null-String () String
    "\u{0}\u{0}")
  (define-fun var153 () String
    (trim-right (trim-left var1466)))
  (define-fun var1928 () Int
    (let ((a!1 (< (num_splits (trim-right (trim-left var1466)) "\s+") (- 1))))
(let ((a!2 (ite a!1 (num_splits (trim-right (trim-left var1466)) "\s+") (- 1))))
  (ite (> (- 1) 0) a!2 (num_splits (trim-right (trim-left var1466)) "\s+")))))
  (define-fun var1452 () var3493
    var3493!val!0)