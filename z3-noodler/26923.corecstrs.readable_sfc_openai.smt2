(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun PCTEMP_LHS_1 () String)
(declare-fun PCTEMP_LHS_2 () String)
(declare-fun T1_3 () String)
(declare-fun T2_3 () String)
(declare-fun T_1 () String)
(declare-fun var_0xINPUT_27346 () String)
(assert (= T_1 (str.++ T1_3 T2_3)))
(assert (= T2_3 var_0xINPUT_27346))
(assert (= T1_3 "/signin"))
(assert (= PCTEMP_LHS_2 PCTEMP_LHS_1))
(assert (not (str.in_re PCTEMP_LHS_2 (str.to_re "%"))))

; --- LLM Generated Split Constraints ---
; Split PCTEMP_LHS_2 at "/" and access first and second segments
(declare-fun PL2_seg0 () String)
(declare-fun PL2_seg1 () String)
(assert (= PL2_seg0 (str.split_at PCTEMP_LHS_2 "/" 0)))
(assert (= PL2_seg1 (str.split_at PCTEMP_LHS_2 "/" 1)))
; The number of splits in PCTEMP_LHS_2 with delimiter "/"
(declare-fun PL2_num_splits () Int)
(assert (= PL2_num_splits (str.num_splits PCTEMP_LHS_2 "/")))
; The first segment of T_1 when split by "i"
(declare-fun T1_seg0 () String)
(assert (= T1_seg0 (str.split_at T_1 "i" 0)))
; There must be at least one segment when splitting T_1 by "i"
(assert (>= (str.num_splits T_1 "i") 1))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
