(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: Strict email validation with additional constraints
Target solver: CVC4, Z3, Z3str3, Z3-Noodler
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Strict email validation with domain structure constraints
(declare-const email_addr String)

; Basic email format constraints
(assert (>= (str.len email_addr) 6)) ; Minimum length for a@b.co
(assert (str.contains email_addr "@"))
(assert (str.contains email_addr "."))

; Split into local and domain parts
(declare-const local String)
(declare-const domain String)
(assert (= local (str.split_at email_addr "@" 0)))
(assert (= domain (str.split_rest email_addr "@" 1)))

; Local part constraints
(assert (>= (str.len local) 1)) ; At least 1 character
(assert (not (str.contains local ".."))) ; No consecutive dots
(assert (not (str.prefixof "." local))) ; Cannot start with dot
(assert (not (str.suffixof "." local))) ; Cannot end with dot

; Domain part must have at least one dot
(assert (>= (str.num_splits domain ".") 2))

; Split domain into subdomains
(declare-const main_domain String)
(declare-const tld String)
(assert (= main_domain (str.split_at domain "." 0)))
(assert (= tld (str.split_rest domain "." 1)))

; Domain component constraints
(assert (>= (str.len main_domain) 1))
(assert (>= (str.len tld) 2)) ; TLD must be at least 2 chars
(assert (not (str.contains tld "@"))) ; No @ in domain parts

; ; Additional constraint: TLD must be alphabetic only
(assert (str.is_digit (str.replace_all tld (str.++ (str.replace_all tld "a" "") 
 (str.replace_all tld "b" "")
 (str.replace_all tld "c" "")
 (str.replace_all tld "d" "")
 (str.replace_all tld "e" "")
 (str.replace_all tld "f" "")
 (str.replace_all tld "g" "")
 (str.replace_all tld "h" "")
 (str.replace_all tld "i" "")
 (str.replace_all tld "j" "")
 (str.replace_all tld "k" "")
 (str.replace_all tld "l" "")
 (str.replace_all tld "m" "")
 (str.replace_all tld "n" "")
 (str.replace_all tld "o" "")
 (str.replace_all tld "p" "")
 (str.replace_all tld "q" "")
 (str.replace_all tld "r" "")
 (str.replace_all tld "s" "")
 (str.replace_all tld "t" "")
 (str.replace_all tld "u" "")
 (str.replace_all tld "v" "")
 (str.replace_all tld "w" "")
 (str.replace_all tld "x" "")
 (str.replace_all tld "y" "")
 (str.replace_all tld "z" "")) "")))

(check-sat)
(get-model)
