(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: Email validation scenario variant
Target solver: CVC4, Z3, Z3str3, Z3-Noodler
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Email validation with stricter constraints
(declare-const email_addr String)

; Must contain exactly one @ character
(assert (= (str.indexof email_addr "@" 0) (str.indexof email_addr "@" 0)))

; Split into local and domain parts
(declare-const local String)
(declare-const domain String)
(assert (= local (str.split_at email_addr "@" 0)))
(assert (= domain (str.split_at email_addr "@" 1)))

; Local part constraints
(assert (>= (str.len local) 1)) ; Minimum 1 character
(assert (<= (str.len local) 64)) ; Maximum 64 characters
(assert (not (str.contains local ".."))) ; No consecutive dots

; Domain part must have at least one dot
(assert (str.contains domain "."))

; Split domain into subdomains
(declare-const subdomain_count Int)
(assert (= subdomain_count (str.num_splits domain ".")))

; Must have between 2 and 4 domain segments
(assert (>= subdomain_count 2))
(assert (<= subdomain_count 4))

; Each domain segment must be 1-63 chars and not start/end with hyphen
(declare-const domain_seg1 String)
(declare-const domain_seg2 String)
(assert (= domain_seg1 (str.split_at domain "." 0)))
(assert (= domain_seg2 (str.split_at domain "." 1)))

(assert (and
 (>= (str.len domain_seg1) 1)
 (<= (str.len domain_seg1) 63)
 (not (str.prefixof "-" domain_seg1))
 (not (str.suffixof "-" domain_seg1))
))

(assert (and
 (>= (str.len domain_seg2) 1)
 (<= (str.len domain_seg2) 63)
 (not (str.prefixof "-" domain_seg2))
 (not (str.suffixof "-" domain_seg2))
))

; TLD must be at least 2 characters
(declare-const tld String)
(assert (= tld (str.split_rest domain "." (- subdomain_count 1))))
(assert (>= (str.len tld) 2))

; ; Example invalid pattern: email cannot start or end with dot
(assert (not (str.prefixof "." email_addr)))
(assert (not (str.suffixof "." email_addr)))

(check-sat)
(get-model)
