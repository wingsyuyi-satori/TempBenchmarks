(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun var_0xINPUT_469239 () String)
(assert (= T_1 (= var_0xINPUT_469239 "Search")))
(assert (= T_2 (not T_1)))
(assert T_2)

; --- LLM Generated Split Constraints ---
; Add basic constraints for splitting the input string
(declare-fun split_part_0 () String)
(declare-fun split_part_1 () String)
(assert (= split_part_0 (str.split_at var_0xINPUT_469239 "e" 0))) ; First part before 'e'
(assert (= split_part_1 (str.split_at var_0xINPUT_469239 "e" 1))) ; Second part after first 'e'
(assert (>= (str.num_splits var_0xINPUT_469239 "e") 1)) ; Must contain at least one 'e'
(assert (<= (str.len split_part_0) 5)) ; Limit length of first segment
(assert (<= (str.len split_part_1) 5)) ; Limit length of second segment
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
