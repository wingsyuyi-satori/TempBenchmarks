(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const S String)
(assert (str.in_re S (re.++ re.allchar (str.to_re "bbbaaa"))))
(assert (not (str.in_re S (re.++ re.allchar (str.to_re "bbb")))))

; --- LLM Generated Split Constraints ---
(declare-const S_first String)
(declare-const S_second String)
(assert (= S_first (str.split_at S "b" 0))) ; first segment before first 'b'
(assert (= S_second (str.split_at S "b" 1))) ; segment between first and second 'b'
(assert (<= (str.num_splits S "b") 4)) ; at most 4 segments if 'b' appears up to 3 times
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
