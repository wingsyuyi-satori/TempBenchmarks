(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: CSV/TSV/PSV field separation and validation
; Scenario: Field count, empty field checks, escape/quote character handling
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Declare a string representing a TSV (tab-separated) line
(declare-const tsv_line String)

; TSV delimiter is the tab character
(define-fun tab_delim () String "\t")

; Assert that there are exactly 5 fields in the input line
(assert (= (str.num_splits tsv_line tab_delim) 5))

; ; Extract each field by index
(declare-const tsv_field0 String)
(declare-const tsv_field1 String)
(declare-const tsv_field2 String)
(declare-const tsv_field3 String)
(declare-const tsv_field4 String)

(assert (= tsv_field0 (str.split_at tsv_line tab_delim 0)))
(assert (= tsv_field1 (str.split_at tsv_line tab_delim 1)))
(assert (= tsv_field2 (str.split_at tsv_line tab_delim 2)))
(assert (= tsv_field3 (str.split_at tsv_line tab_delim 3)))
(assert (= tsv_field4 (str.split_at tsv_line tab_delim 4)))

; Assert that the third field cannot be empty (e.g., a required column)
(assert (> (str.len tsv_field2) 0))

; Assert that the first and last fields may be empty (to allow leading/trailing tabs)
; No constraint needed: emptiness is allowed

; Assert that the fourth field must not contain the delimiter (tab)
(assert (not (str.contains tsv_field3 tab_delim)))

; Assert that the fifth field does not contain the vertical bar (for pipe safety)
(assert (not (str.contains tsv_field4 "|")))

; Assert that none of the fields contain unescaped double quotes
(declare-fun no_unescaped_quote (String) Bool)

; UNSAT variant: require the second field to equal the delimiter (impossible since field separators are removed by split)
(assert (= tsv_field1 tab_delim))

(check-sat)
(get-model)
