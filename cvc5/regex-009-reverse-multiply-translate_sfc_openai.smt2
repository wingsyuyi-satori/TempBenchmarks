(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const x String)
(declare-const y String)
(assert (str.in_re x (re.* (str.to_re "vvVVLLww"))))
(assert (str.in_re x (re.* (str.to_re "vvVVLLwwvvVVLLww"))))
(assert (> (str.len x) 40))
(assert (< (str.len x) 50))

; --- LLM Generated Split Constraints ---
(declare-const x_seg0 String)
(declare-const x_seg1 String)
(assert (= x_seg0 (str.split_at x "V" 0)))
(assert (= x_seg1 (str.split_at x "V" 1)))
(assert (>= (str.len x_seg0) 0))
(assert (>= (str.len x_seg1) 0))
(assert (>= (str.num_splits x "V") 1))
(declare-const x_rest1 String)
(assert (= x_rest1 (str.split_rest x "V" 1)))
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
