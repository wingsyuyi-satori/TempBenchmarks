(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun var_0xINPUT_469239 () String)
(assert (= T_1 (= var_0xINPUT_469239 "Search")))
(assert (= T_2 (not T_1)))
(assert T_2)

; --- LLM Generated Split Constraints ---
; Multi-level split: split var_0xINPUT_469239 by "@", then split first segment by "-"
(declare-const at_parts_count Int)
(assert (= at_parts_count (str.num_splits var_0xINPUT_469239 "@")))
(assert (>= at_parts_count 2))
; ; Extract first and second parts of "@" split
(declare-const at_first String)
(declare-const at_second String)
(assert (= at_first (str.split_at var_0xINPUT_469239 "@" 0)))
(assert (= at_second (str.split_at var_0xINPUT_469239 "@" 1)))
; Nested split: split at_first by "-"
(declare-const dash_parts_count Int)
(assert (= dash_parts_count (str.num_splits at_first "-")))
(assert (>= dash_parts_count 2))
(declare-const dash_first String)
(declare-const dash_rest String)
(assert (= dash_first (str.split_at at_first "-" 0)))
(assert (= dash_rest (str.split_rest at_first "-" 1)))
; Cross-dependency: dash_rest must be a prefix of at_second
(assert (str.prefixof dash_rest at_second))
; Advanced validation: at_second must contain at least one "."
(assert (str.contains at_second "."))
; Relationship: dash_first and at_second must not be equal
(assert (not (= dash_first at_second)))
; ; Length constraint: at_first must be longer than at_second
(assert (> (str.len at_first) (str.len at_second)))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
