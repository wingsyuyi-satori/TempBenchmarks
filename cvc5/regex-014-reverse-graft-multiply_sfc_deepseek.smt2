(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const x String)
(declare-const y String)
(assert (str.in_re x (str.to_re "bbaa")))
(assert (str.in_re y (re.* (str.to_re "bbaa"))))
(assert (= 4 (str.len x)))
(assert (= (str.len y) 8))

; --- LLM Generated Split Constraints ---
; Split x on "a" delimiter and verify basic properties
(assert (= (str.num_splits x "a") 3)) ; "bbaa" splits into ["bb", "", ""]
(assert (= (str.split_at x "a" 0) "bb")) ; First segment before first "a"
(assert (= (str.split_at x "a" 1) "")) ; Segment between "a"s
(assert (= (str.split_rest x "a" 1) "")) ; Remaining after first split
; Split y on "b" delimiter with validation
(assert (>= (str.num_splits y "b") 2)) ; At least 2 splits in "bbaa"2
(assert (str.contains (str.split_at y "b" 1) "a")) ; Middle segments contain "a"
(assert (<= (str.len (str.split_rest y "a" 0)) 6)) ; Rest after first "a" split
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
