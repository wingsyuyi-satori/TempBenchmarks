(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun var_0xINPUT_201252 () String)
(declare-const num_1_5061 Int)
(declare-const num_2_5882 Int)
(assert (= T_1 (not (= "" var_0xINPUT_201252))))
(assert T_1)
(assert (= T_2 (= var_0xINPUT_201252 "array")))
(assert T_2)
(assert (= (str.split_at var_0xINPUT_201252 "4" 3) var_0xINPUT_201252))
(assert (= (str.split_at var_0xINPUT_201252 "4" 2) var_0xINPUT_201252))
(assert (= (str.split_at var_0xINPUT_201252 "4" 2) var_0xINPUT_201252))
(assert (= (str.split_rest var_0xINPUT_201252 "4" 0) "g7vhvn8ioi6"))
(assert (= (str.split_rest var_0xINPUT_201252 "4" 2) "79m2j"))
(assert (and (>= (str.num_splits var_0xINPUT_201252 "4") 2) (<= (str.num_splits var_0xINPUT_201252 "4") 4)))
(assert (= (str.num_splits var_0xINPUT_201252 "4") num_1_5061))
(assert (<= num_1_5061 3))
(assert (= (str.num_splits var_0xINPUT_201252 "4") num_2_5882))
(assert (< num_2_5882 8))
(check-sat)

(get-model)
