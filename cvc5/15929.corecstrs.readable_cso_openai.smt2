(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun var_0xINPUT_47381 () String)
(assert (= T_1 (not (= "file:" var_0xINPUT_47381))))
(assert T_1)

; --- LLM Generated Split Constraints ---
; Split var_0xINPUT_47381 by "/" and then by ":"
(declare-const slash_count Int)
(assert (= slash_count (str.num_splits var_0xINPUT_47381 "/")))
(assert (>= slash_count 2))
(declare-const first_segment String)
(declare-const rest_after_first_slash String)
(assert (= first_segment (str.split_at var_0xINPUT_47381 "/" 0)))
(assert (= rest_after_first_slash (str.split_rest var_0xINPUT_47381 "/" 1)))
; Nested split: split first_segment by ":"
(declare-const proto String)
(declare-const proto_rest String)
(assert (= proto (str.split_at first_segment ":" 0)))
(assert (= proto_rest (str.split_rest first_segment ":" 1)))
; Cross-dependency: rest_after_first_slash must not start with proto
(assert (not (str.prefixof proto rest_after_first_slash)))
; Advanced validation: proto must be "http" or "https"
(assert (or (= proto "http") (= proto "https")))
; Advanced validation: proto_rest must be empty (enforce format like "http:/...")
(assert (= proto_rest ""))
; Relationship: The length of rest_after_first_slash is greater than proto
(assert (> (str.len rest_after_first_slash) (str.len proto)))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
