(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Enriches a system of 30 word equations by suitable linear constraints
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun I () String)
(declare-fun H () String)
(declare-fun F () String)
(declare-fun E () String)
(assert (= (str.++  "efadc" E "ebcecedeaabfcbfadfdcf")  (str.++  "efadcfdcafd" I "ce" F "aabfcbfadfdcf") ))
(assert (= (str.++  "fbcccbdefcfdaaffbeafbdfaf" H "abababdeef")  (str.++  "fbcccbdefcfdaaffbeafbdfaf" H "abababdeef") ))
(assert (= (str.++  "aebcefcffadceeabecadeeaae" I "ccbfadcbcf")  (str.++  "aebcefcffadceeabecadeeaaebcddcccbfadcbcf" "") ))
(assert (>=(* (str.len I) 13) 13))
(assert (>=(* (str.len E) 17) 204))
(assert (<=(* (str.len E) 14) 1834))
(assert (<=(* (str.len H) 14) 126))
(assert (<=(* (str.len F) 9) 1539))

; --- LLM Generated Split Constraints ---
(declare-const I_split0 String)
(declare-const I_split1 String)
(declare-const E_split0 String)
(declare-const E_split1 String)
(declare-const H_split0 String)
(declare-const H_split1 String)
(declare-const F_split0 String)
(declare-const F_split1 String)
; Split constraints for variable I with delimiter "c"
(assert (= I_split0 (str.split_at I "c" 0)))
(assert (= I_split1 (str.split_at I "c" 1)))
(assert (>= (str.num_splits I "c") 1))
; Split constraints for variable E with delimiter "e"
(assert (= E_split0 (str.split_at E "e" 0)))
(assert (= E_split1 (str.split_at E "e" 1)))
(assert (>= (str.num_splits E "e") 1))
; Split constraints for variable H with delimiter "a"
(assert (= H_split0 (str.split_at H "a" 0)))
(assert (= H_split1 (str.split_at H "a" 1)))
(assert (>= (str.num_splits H "a") 1))
; Split constraints for variable F with delimiter "f"
(assert (= F_split0 (str.split_at F "f" 0)))
(assert (= F_split1 (str.split_at F "f" 1)))
(assert (>= (str.num_splits F "f") 1))
; Basic validation constraints
(assert (>= (str.len I_split0) 0))
(assert (>= (str.len E_split0) 0))
(assert (>= (str.len H_split0) 0))
(assert (>= (str.len F_split0) 0))
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
