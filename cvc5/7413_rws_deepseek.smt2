(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: Email validation with stricter domain rules
Target solver: CVC4, Z3, Z3str3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Email validation with stricter domain constraints
(declare-const email_addr String)

; Must contain exactly one @ character
(assert (> (str.indexof email_addr "@" 0) 0))

; Split into local and domain parts
(declare-const local String)
(declare-const domain String)
(assert (= local (str.split_at email_addr "@" 0)))
(assert (= domain (str.split_at email_addr "@" 1)))

; Local part constraints
(assert (>= (str.len local) 1)) ; At least 1 character
(assert (<= (str.len local) 64)) ; RFC 5321 maximum

; Domain must have at least one dot
(assert (> (str.num_splits domain ".") 1))

; Split domain into subdomains
(declare-const subdomains String)
(assert (= subdomains (str.split_rest domain "." 0)))

; Each subdomain must be 1-63 chars and not start/end with hyphen
(declare-const subdomain1 String)
(declare-const subdomain2 String)
(assert (= subdomain1 (str.split_at domain "." 0)))
(assert (= subdomain2 (str.split_at domain "." 1)))

(assert (and
 (>= (str.len subdomain1) 1)
 (<= (str.len subdomain1) 63)
 (not (str.prefixof "-" subdomain1))
 (not (str.suffixof "-" subdomain1))
))

(assert (and
 (>= (str.len subdomain2) 2) ; TLD minimum 2 chars
 (<= (str.len subdomain2) 63)
 (not (str.prefixof "-" subdomain2))
 (not (str.suffixof "-" subdomain2))
))

; Top-level domain must be alphabetic

; No consecutive dots in domain
(assert (not (str.contains domain "..")))

(check-sat)
(get-model)
