(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Int)
(declare-fun T_2 () Bool)
(declare-fun T_3 () Bool)
(declare-fun var_0xINPUT_355061 () String)
(declare-const part_0_7827 String)
(declare-const part_1_2629 String)
(declare-const num_0_1958 Int)
(assert (= T_1 (str.len var_0xINPUT_355061)))
(assert (= T_2 (= T_1 0)))
(assert (= T_3 (not T_2)))
(assert T_3)
(assert (= (str.split_at var_0xINPUT_355061 ".." 2) part_0_7827))
(assert (= (str.len part_0_7827) 4))
(assert (= (str.split_at var_0xINPUT_355061 ".." 0) part_1_2629))
(assert (= (str.len part_1_2629) 1))
(assert (= (str.split_rest var_0xINPUT_355061 ".." 2) "b30x07m"))
(assert (= (str.num_splits var_0xINPUT_355061 "..") num_0_1958))
(assert (>= num_0_1958 6))
(check-sat)

(get-model)
