(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: URL validation with path analysis
Target solver: CVC4, Z3, Z3str3, Z3-Noodler
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; URL validation with path structure analysis
(declare-const user_url String)
(declare-const admin_url String)
; Both URLs must have exactly one "://" separator
(assert (= (str.num_splits user_url "://") 2))
(assert (= (str.num_splits admin_url "://") 2))
; Extract components for user URL
(declare-const user_scheme String)
(declare-const user_hostpath String)
(assert (= user_scheme (str.split_at user_url "://" 0)))
(assert (= user_hostpath (str.split_at user_url "://" 1)))
; Extract components for admin URL
(declare-const admin_scheme String)
(declare-const admin_hostpath String)
(assert (= admin_scheme (str.split_at admin_url "://" 0)))
(assert (= admin_hostpath (str.split_at admin_url "://" 1)))
; User hostpath must have at least 2 segments (host/path)
(assert (>= (str.num_splits user_hostpath "/") 2))
; Admin hostpath must have exactly 1 segment (host)
(assert (= (str.num_splits admin_hostpath "/") 1))
; Extract path from user hostpath
(declare-const path String)
(assert (= path (str.split_at user_hostpath "/" 1)))
(assert (>= (str.len path) 4))
; Extract host from user URL
(declare-const user_host String)
(assert (= user_host (str.split_at user_hostpath "/" 0)))
; Admin and user must share the same host
(declare-const admin_host String)
(assert (= admin_host (str.split_at admin_hostpath "/" 0)))
(assert (= user_host admin_host))
; Schemes must be non-empty and different
(assert (> (str.len user_scheme) 0))
(assert (> (str.len admin_scheme) 0))
(assert (not (= user_scheme admin_scheme)))
; Admin scheme must start with "https"
(assert (str.prefixof "https" admin_scheme))
; TLD validation - both hosts must end with same TLD
(declare-const user_tld String)
(declare-const admin_tld String)
(assert (= user_tld (str.split_rest user_host "." 1)))
(assert (= admin_tld (str.split_rest admin_host "." 1)))
(assert (= user_tld admin_tld))
; TLD must be valid length
(assert (and (>= (str.len user_tld) 2) (<= (str.len user_tld) 6)))
(check-sat)
(exit)
(get-model)
