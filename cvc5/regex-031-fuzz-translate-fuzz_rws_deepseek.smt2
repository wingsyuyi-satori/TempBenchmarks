(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: Strict email validation scenario
Target solver: CVC4, Z3, Z3str3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Strict email validation with additional constraints
(declare-const email_addr String)

; Must contain exactly one @ symbol

; Split into exactly two non-empty parts at @
(assert (= (str.num_splits email_addr "@") 2))
(declare-const mailbox String)
(declare-const domain String)
(assert (= mailbox (str.split_at email_addr "@" 0)))
(assert (= domain (str.split_at email_addr "@" 1)))
(assert (> (str.len mailbox) 0))
(assert (> (str.len domain) 0))

; Domain must have at least one dot
(assert (str.contains domain "."))

; Domain must split into at least two parts by dots
(assert (>= (str.num_splits domain ".") 2))

; Each domain segment must be 1-63 chars and not start/end with hyphen
(declare-const domain_seg1 String)
(declare-const domain_seg2 String)
(assert (= domain_seg1 (str.split_at domain "." 0)))
(assert (= domain_seg2 (str.split_rest domain "." 1)))

(assert (and
 (>= (str.len domain_seg1) 1)
 (<= (str.len domain_seg1) 63)
 (not (str.prefixof "-" domain_seg1))
 (not (str.suffixof "-" domain_seg1))
))

; TLD must be at least 2 chars
(declare-const tld String)
(assert (= tld (str.split_at domain_seg2 "." (- (str.num_splits domain_seg2 ".") 1))))
(assert (>= (str.len tld) 2))

; Mailbox cannot start or end with dot
(assert (not (str.prefixof "." mailbox)))
(assert (not (str.suffixof "." mailbox)))

; Mailbox cannot have consecutive dots
(assert (not (str.contains mailbox "..")))

(check-sat)
(exit)
(get-model)
