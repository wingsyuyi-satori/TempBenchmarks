(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Scenario: Email validation - alternative constraints/variables
Target: SMT solvers supporting string split extensions
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

; Declare the input email string
(declare-const EMAIL String)

; Split EMAIL at '@', must result in exactly 2 segments
(assert (= (str.num_splits EMAIL "@") 2))

; Retrieve user and host
(declare-const USER String)
(declare-const HOST String)
(assert (= USER (str.split_at EMAIL "@" 0)))
(assert (= HOST (str.split_at EMAIL "@" 1)))

; USER cannot start or end with a dot
(assert (not (= (str.at USER 0) ".")))
(assert (not (= (str.at USER (- (str.len USER) 1)) ".")))

; USER must not be empty and must not contain '@'
(assert (> (str.len USER) 0))
(assert (not (str.contains USER "@")))

; HOST must contain at least one dot ('.')
(assert (>= (str.num_splits HOST ".") 2))

; ; Extract subdomain, domain, and tld from HOST
(declare-const SUBDOMAIN String)
(declare-const DOMAIN String)
(declare-const TLD String)

(assert (= SUBDOMAIN (str.split_at HOST "." 0)))
(assert (= DOMAIN (str.split_at HOST "." 1)))
(assert (= TLD (str.split_rest HOST "." 2)))

; SUBDOMAIN must be non-empty and must not start or end with '-'
(assert (> (str.len SUBDOMAIN) 0))
(assert (not (= (str.at SUBDOMAIN 0) "-")))
(assert (not (= (str.at SUBDOMAIN (- (str.len SUBDOMAIN) 1)) "-")))

; DOMAIN must be non-empty and must not contain '@'
(assert (> (str.len DOMAIN) 0))
(assert (not (str.contains DOMAIN "@")))

; TLD must be at least 2 characters long and only alphabetic (simulate with no digits)
(assert (>= (str.len TLD) 2))
(assert (not (str.contains TLD "0")))
(assert (not (str.contains TLD "1")))
(assert (not (str.contains TLD "2")))
(assert (not (str.contains TLD "3")))
(assert (not (str.contains TLD "4")))
(assert (not (str.contains TLD "5")))
(assert (not (str.contains TLD "6")))
(assert (not (str.contains TLD "7")))
(assert (not (str.contains TLD "8")))
(assert (not (str.contains TLD "9")))

; ; UNSAT constraint: USER and DOMAIN are equal (should not happen in a normal email)
(assert (= USER DOMAIN))

(check-sat)
(get-model)
