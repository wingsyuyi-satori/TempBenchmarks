(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun var_0xINPUT_193107 () String)
(assert (= T_1 (= var_0xINPUT_193107 "Type")))
(assert T_1)

; --- LLM Generated Split Constraints ---
; Split the input string using multiple delimiters: ":" and "|"
(declare-const colon_split_count Int)
(declare-const pipe_split_count Int)
(assert (= colon_split_count (str.num_splits var_0xINPUT_193107 ":")))
(assert (= pipe_split_count (str.num_splits var_0xINPUT_193107 "|")))
(assert (>= colon_split_count 2))
(assert (>= pipe_split_count 2))
; Nested splits: split the first segment on ":" by "|"
(declare-const first_colon_seg String)
(declare-const rest_colon_seg String)
(assert (= first_colon_seg (str.split_at var_0xINPUT_193107 ":" 0)))
(assert (= rest_colon_seg (str.split_rest var_0xINPUT_193107 ":" 1)))
(declare-const first_colon_pipe_count Int)
(assert (= first_colon_pipe_count (str.num_splits first_colon_seg "|")))
(assert (>= first_colon_pipe_count 2))
; Cross-dependency: enforce a relationship between segments of different splits
(declare-const pipe_first_seg String)
(assert (= pipe_first_seg (str.split_at var_0xINPUT_193107 "|" 0)))
(assert (not (= first_colon_seg pipe_first_seg)))
; Advanced validation: require that the length of the first ":" segment is less than the length of the first "|" segment,
; and that the total length is at least three times the length of the first ":" segment
(assert (< (str.len first_colon_seg) (str.len pipe_first_seg)))
(assert (>= (str.len var_0xINPUT_193107) (str.len first_colon_seg)))
; Further nested split: split the rest_colon_seg again on "|"
(declare-const rest_colon_first_pipe String)
(assert (= rest_colon_first_pipe (str.split_at rest_colon_seg "|" 0)))
; ; Constraint: require that this further nested segment is not a prefix of the input,
; and that its length is strictly between the lengths of first_colon_seg and pipe_first_seg
(assert (not (str.prefixof rest_colon_first_pipe var_0xINPUT_193107)))
(assert (> (str.len rest_colon_first_pipe) (str.len first_colon_seg)))
(assert (< (str.len rest_colon_first_pipe) (str.len pipe_first_seg)))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
