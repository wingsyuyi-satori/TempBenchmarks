(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun var_0xINPUT_89339 () String)
(assert (= T_1 (not (= "" var_0xINPUT_89339))))
(assert T_1)
(assert (= T_2 (not (= var_0xINPUT_89339 ""))))
(assert T_2)

; --- LLM Generated Split Constraints ---
(declare-const var_0xINPUT_89339_first String)
(declare-const var_0xINPUT_89339_second String)
(assert (= var_0xINPUT_89339_first (str.split_at var_0xINPUT_89339 "," 0)))
(assert (= var_0xINPUT_89339_second (str.split_at var_0xINPUT_89339 "," 1)))
; Ensure the number of splits is at least 1 since input is not empty
(assert (>= (str.num_splits var_0xINPUT_89339 ",") 1))
; ; Validate that the concatenation of the first segment, the delimiter, and the rest yields the original string when at least two segments exist
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
