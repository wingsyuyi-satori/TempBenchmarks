(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: PyEx, converted to v2.6 by CVC4
Application: Symbolic Execution of Python Programs
Target solver: CVC4, Z3, Z3str2
Publications: "Scaling Up DPLL(T) String Solvers Using Context-Dependent Simplification" by A. Reynolds, M. Woo, C. Barrett, D. Brumley, T. Liang, and C. Tinelli, CAV 2017.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun key2 () String)
(declare-fun value2 () String)
(assert (and (and (and (and (and (and (and (and (and (and (not (not (not (= (ite (= (str.len (str.substr value2 1 (- (str.len value2) 1))) 0) 1 0) 0)))) (not (= (ite (= (str.at value2 0) " ") 1 0) 0))) (not (not (= (ite (= (str.len value2) 0) 1 0) 0)))) (not (= (ite (= (str.indexof value2 "=" 0) (- 1)) 1 0) 0))) (not (not (= (ite (not (= (str.indexof value2 "=" 0) (- 1))) 1 0) 0)))) (not (not (= (ite (str.contains value2 ",") 1 0) 0)))) (not (not (= (ite (= (str.len value2) 0) 1 0) 0)))) (not (= (ite (= key2 "cache-control") 1 0) 0))) (not (= (ite (= key2 "cache-control") 1 0) 0))) (>= 1 0)) (>= (- (str.len value2) 1) 0)))

; --- LLM Generated Split Constraints ---
(declare-fun value2_parts_0 () String)
(declare-fun value2_parts_1 () String)
(declare-fun value2_parts_2 () String)
(declare-fun key2_parts_0 () String)
(declare-fun key2_parts_1 () String)
; Split value2 by "=" delimiter
(assert (= value2_parts_0 (str.split_at value2 "=" 0)))
(assert (= value2_parts_1 (str.split_at value2 "=" 1)))
(assert (= (str.num_splits value2 "=") 2))
; Split value2 by "," delimiter for cache-control parsing
(assert (= value2_parts_2 (str.split_at value2 "," 0)))
(assert (<= (str.num_splits value2 ",") 3))
; Split key2 by "-" delimiter for compound keys
(assert (= key2_parts_0 (str.split_at key2 "-" 0)))
(assert (= key2_parts_1 (str.split_at key2 "-" 1)))
(assert (= (str.num_splits key2 "-") 2))
; Basic validation constraints
(assert (>= (str.len value2_parts_0) 0))
(assert (>= (str.len key2_parts_0) 0))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
