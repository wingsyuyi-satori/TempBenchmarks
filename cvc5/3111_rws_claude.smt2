(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: LLM-based constraint generator
Application: File path validation with directory analysis
Target solver: CVC4, Z3, Z3str3, Z3-Noodler
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; File path validation with directory structure analysis
(declare-const user_path String)
(declare-const admin_path String)
; Both paths must have at least three "/" separators
(assert (>= (str.num_splits user_path "/") 3))
(assert (>= (str.num_splits admin_path "/") 3))
; Extract components for user path
(declare-const user_dir String)
(declare-const user_file String)
(assert (= user_dir (str.split_rest user_path "/" 1)))
(assert (= user_file (str.split_at user_path "/" (- (str.num_splits user_path "/") 1))))
; Extract components for admin path
(declare-const admin_dir String)
(declare-const admin_file String)
(assert (= admin_dir (str.split_rest admin_path "/" 1)))
(assert (= admin_file (str.split_at admin_path "/" (- (str.num_splits admin_path "/") 1))))
; User directory must have at least 2 segments
(assert (>= (str.num_splits user_dir "/") 2))
; Admin directory must have exactly 1 segment
(assert (= (str.num_splits admin_dir "/") 1))
; Extract subdirectory from user directory
(declare-const subdir String)
(assert (= subdir (str.split_at user_dir "/" 0)))
(assert (>= (str.len subdir) 5))
; Extract main directory from user path
(declare-const main_dir String)
(assert (= main_dir (str.split_at user_dir "/" 1)))
; Admin and user must share the same main directory
(declare-const admin_main_dir String)
(assert (= admin_main_dir (str.split_at admin_dir "/" 0)))
(assert (= main_dir admin_main_dir))
; File names must be non-empty and different
(assert (> (str.len user_file) 0))
(assert (> (str.len admin_file) 0))
(assert (not (= user_file admin_file)))
; Admin file must end with ".conf"
(assert (str.suffixof ".conf" admin_file))
; Extension validation - both must have same extension
(declare-const user_ext String)
(declare-const admin_ext String)
(assert (= user_ext (str.split_rest user_file "." 1)))
(assert (= admin_ext (str.split_rest admin_file "." 1)))
(assert (= user_ext admin_ext))
; Extension must be valid length
(assert (and (>= (str.len user_ext) 3) (<= (str.len user_ext) 4)))
(check-sat)
(get-model)
