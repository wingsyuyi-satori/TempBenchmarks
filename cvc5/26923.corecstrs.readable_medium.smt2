(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun PCTEMP_LHS_1 () String)
(declare-fun PCTEMP_LHS_2 () String)
(declare-fun T1_3 () String)
(declare-fun T2_3 () String)
(declare-fun T_1 () String)
(declare-fun var_0xINPUT_27346 () String)
(declare-const part_0_1786 String)
(declare-const rest_0_1782 String)
(assert (= T_1 (str.++ T1_3 T2_3)))
(assert (= T2_3 var_0xINPUT_27346))
(assert (= T1_3 "/signin"))
(assert (= PCTEMP_LHS_2 PCTEMP_LHS_1))
(assert (not (str.in_re PCTEMP_LHS_2 (str.to_re "%"))))
(assert (= (str.split_at PCTEMP_LHS_2 "::" 1) part_0_1786))
(assert (str.prefixof "a" part_0_1786))
(assert (= (str.split_rest PCTEMP_LHS_2 "::" 0) rest_0_1782))
(assert (= (str.split_at PCTEMP_LHS_1 " " 2) T2_3))
(assert (= (str.split_at PCTEMP_LHS_2 ":" 2) var_0xINPUT_27346))
(assert (= (str.split_rest PCTEMP_LHS_2 ":" 2) "wyybkdbrfc8y"))
(assert (= (str.split_rest PCTEMP_LHS_2 ":" 3) "bdwenbq"))
(check-sat)

(get-model)
