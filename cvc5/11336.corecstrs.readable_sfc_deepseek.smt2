(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun var_0xINPUT_110142 () String)
(assert (= T_1 (= var_0xINPUT_110142 "Type")))
(assert (= T_2 (not T_1)))
(assert T_2)

; --- LLM Generated Split Constraints ---
; Split the input string on "y" delimiter
(declare-fun split_part0 () String)
(declare-fun split_part1 () String)
(assert (= split_part0 (str.split_at var_0xINPUT_110142 "y" 0)))
(assert (= split_part1 (str.split_at var_0xINPUT_110142 "y" 1)))
; Verify we have exactly 2 parts when splitting on "y"
(assert (= (str.num_splits var_0xINPUT_110142 "y") 2))
; Ensure first part is non-empty if input contains "y"
(assert (=> (str.contains var_0xINPUT_110142 "y") (> (str.len split_part0) 0)))
; Add constraint on remaining segments after first split
; --- End LLM Generated Constraints ---

(check-sat)

(get-model)
