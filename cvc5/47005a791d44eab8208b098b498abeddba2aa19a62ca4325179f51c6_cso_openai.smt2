(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: PyEx, converted to v2.6 by CVC4
Application: Symbolic Execution of Python Programs
Target solver: CVC4, Z3, Z3str2
Publications: "Scaling Up DPLL(T) String Solvers Using Context-Dependent Simplification" by A. Reynolds, M. Woo, C. Barrett, D. Brumley, T. Liang, and C. Tinelli, CAV 2017.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun key2 () String)
(declare-fun value2 () String)
(assert (and (and (and (and (and (and (and (and (and (and (not (not (not (= (ite (= (str.len (str.substr value2 1 (- (str.len value2) 1))) 0) 1 0) 0)))) (not (= (ite (= (str.at value2 0) " ") 1 0) 0))) (not (not (= (ite (= (str.len value2) 0) 1 0) 0)))) (not (= (ite (= (str.indexof value2 "=" 0) (- 1)) 1 0) 0))) (not (not (= (ite (not (= (str.indexof value2 "=" 0) (- 1))) 1 0) 0)))) (not (not (= (ite (str.contains value2 ",") 1 0) 0)))) (not (not (= (ite (= (str.len value2) 0) 1 0) 0)))) (not (= (ite (= key2 "cache-control") 1 0) 0))) (not (= (ite (= key2 "cache-control") 1 0) 0))) (>= 1 0)) (>= (- (str.len value2) 1) 0)))

; --- LLM Generated Split Constraints ---
; Multi-level split constraints with cross dependencies for key2 and value2
; Assume value2 is a comma-separated list of semi-colon separated key=value pairs
; ; e.g., value2 = "max-age=3600;secure,stale-while-revalidate=30;must-revalidate"
; 1. Split value2 by "," into two segments v2_left and v2_right
(declare-fun v2_left () String)
(declare-fun v2_right () String)
(assert (= v2_left (str.split_at value2 "," 0)))
(assert (= v2_right (str.split_rest value2 "," 1)))
; 2. Each segment is further split by ";" into at least 2 parts
(declare-fun v2_left_first () String)
(declare-fun v2_left_second () String)
(assert (= v2_left_first (str.split_at v2_left ";" 0)))
(assert (= v2_left_second (str.split_at v2_left ";" 1)))
(declare-fun v2_right_first () String)
(declare-fun v2_right_second () String)
(assert (= v2_right_first (str.split_at v2_right ";" 0)))
(assert (= v2_right_second (str.split_at v2_right ";" 1)))
; 3. Each "first" part of the segment is a key=value pair, split by "="
(declare-fun left_key () String)
(declare-fun left_value () String)
(assert (= left_key (str.split_at v2_left_first "=" 0)))
(assert (= left_value (str.split_rest v2_left_first "=" 1)))
(declare-fun right_key () String)
(declare-fun right_value () String)
(assert (= right_key (str.split_at v2_right_first "=" 0)))
(assert (= right_value (str.split_rest v2_right_first "=" 1)))
; ; 4. Cross-segment constraint: left_key and right_key must be different
(assert (not (= left_key right_key)))
; 5. Advanced validation: left_value and right_value must be numeric strings of different lengths
(assert (not (= (str.len left_value) (str.len right_value))))
; 6. Cross-dependency: key2 must be a substring of either left_key or right_key
(assert (or (str.contains left_key key2) (str.contains right_key key2)))
; 7. Relation: v2_left_second and v2_right_second must not be equal
(assert (not (= v2_left_second v2_right_second)))
; --- End LLM Generated Constraints ---

(check-sat)

(exit)
(get-model)
